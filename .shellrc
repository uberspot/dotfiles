#!/usr/bin/env sh

# load useful functions first
file="$HOME/.alias"; [ -f "$file" ] && source "$file"

# Load the shell dotfiles, and then some:
for file in {$HOME/.funcs,/usr/share/doc/pkgfile/command-not-found.bash}; do
try_source "$file"
done
unset file

eval "$(dircolors -b)"
FILE="$HOME/.extra/ls_colors/LS_COLORS" ; [ -f "$FILE" ] && eval "$(dircolors -b $FILE)"

# make less more friendly for non-text input files
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

### Disable CTRL-S and CTRL-Q
[[ $- =~ i ]] && stty -ixoff -ixon

# Z config
_Z_DATA="$HOME/.cache/z"
_Z_OWNER="$USER"
_Z_CMD="c"
try_source "$HOME/.oh-my-zsh/plugins/z/z.sh"

try_source "$HOME/.rvm/scripts/rvm"

if [ -n "$ZSH_VERSION" ]; then
  # The next line updates PATH for the Google Cloud SDK.
  if [ -f '/home/code/.local/bin/google-cloud-sdk/path.zsh.inc' ]; then . '/home/code/.local/bin/google-cloud-sdk/path.zsh.inc'; fi
  # The next line enables shell command completion for gcloud.
  if [ -f '/home/code/.local/bin/google-cloud-sdk/completion.zsh.inc' ]; then . '/home/code/.local/bin/google-cloud-sdk/completion.zsh.inc'; fi
elif [ -n "$BASH_VERSION" ]; then
  # The next line updates PATH for the Google Cloud SDK.
  if [ -f '/home/code/.local/bin/google-cloud-sdk/path.bash.inc' ]; then . '/home/code/.local/bin/google-cloud-sdk/path.bash.inc'; fi
  # The next line enables shell command completion for gcloud.
  if [ -f '/home/code/.local/bin/google-cloud-sdk/completion.bash.inc' ]; then . '/home/code/.local/bin/google-cloud-sdk/completion.bash.inc'; fi
fi

eval "$(pyenv init -)"
